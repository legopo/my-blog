[{"content":"環境  PHP8系 Laravel8系  環境構築 Laravel Sail前提でプロジェクト作成する。(Docker必要)\n起動してlocalhostで確認。\nhttps://readouble.com/laravel/8.x/ja/installation.html\n$ curl -s \u0026quot;https://laravel.build/voyager-tutorial\u0026quot; | bash $ cd voyager-tutorial \u0026amp;\u0026amp; ./vendor/bin/sail up  ./vendor/bin/sail を毎回撃たなくていいように、sail としてエイリアス登録しておく。\nVoyageのインストール \u0026ndash;with-dummyオプションでダミーデータも作った。\nhttps://voyager-docs.devdojo.com/getting-started/installation\n$ sail composer require tcg/voyager $ sail artisan voyager:install --with-dummy  localhost/admin でアクセス\n email: admin@admin.com\npassword: password\n 設定(config/voyager.php) https://voyager-docs.devdojo.com/getting-started/configurations\nuser\nデフォルト権限、ログイン後？リダイレクト先など設定できる。\ncontrollers\nVoyagerの内部のコントローラーの読み込み先設定。 \u0026lsquo;TCG\\Voyager\\Http\\Controllers\u0026rsquo; からディレクトリごとコピーして好きな場所に配置してカスタムできる模様。 ライブラリ内部のことなので、触らずにおきたいやつのはず。\nstorage\nストレージをAWS S3などに変更する。\nhttps://voyager-docs.devdojo.com/getting-started/configurations#storage\nmodel\nvoyagerのtoolでテーブル作った時に生成できるモデルの生成先ディレクトリを指定できる。\n管理画面に関するモデルなどは各種別ごとに/admin/以下の配置がいいのかどうか。 モデルは共有にすべき？ここら辺の分け方を調べる必要あり。\nBREAD  管理画面でのBREAD作成時に、コントローラーを指定できる。指定しなければデフォルトなので、基本的に特殊な処理を噛ませたい場合以外はデフォルトの方がいいかもしれない。(コントローラーのあるなしの統一が図れなくなるので再考。)  メモ 管理画面ユーザーは usersテーブルがデフォルトで使われるので、場合によって変更する。\n参考: https://divrots.com/2021/06/22/use-different-model-from-voyage-default/ https://voyager-docs.devdojo.com/customization/custom-guard\n 日本語化\n 権限\n管理画面のログインユーザーの権限を考慮する必要あり。 開発者、ユーザー側管理者、ユーザー側一般 など？\nconfig/voyager.php でデフォルト権限設定可能。 デフォルトは一般にしておくのがよさげ。\n各種、表示の権限だけでなく、編集などの別アクションの権限もあるので、そちらはポリシークラスでの設定となりそう。BREADを管理画面から作る時に、ポリシークラス名の設定があった。(BREADをどう使うかはまた再考する必要あり。使わないようにした方がいいかもしれないし。) https://voyager-docs.devdojo.com/bread/introduction https://voyager-docs.devdojo.com/v/1.0/core-concepts/roles-and-permissions\n ","permalink":"https://legopo.github.io/my-blog/posts/laravel-voyager/","summary":"環境 PHP8系 Laravel8系 環境構築 Laravel Sail前提でプロ","title":"Laravel Voyagerのメモ"},{"content":" Contentful Hugo GitHub Pages  を使ったブログの投稿テスト\n文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字\nfunction hoge() { console.log('fuga') } ","permalink":"https://legopo.github.io/my-blog/posts/test/","summary":"Contentful Hugo GitHub Pages を使ったブログの投稿テスト 文字文字文字文字文字文字文","title":"テスト"},{"content":"","permalink":"https://legopo.github.io/my-blog/categories/","summary":"categories","title":"Category"}]